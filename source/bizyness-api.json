{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "API Reference",
    "version" : "1.0.0",
    "description" : "# Overview\n\n<mark>This API in under construction and should not be used in a production environment</mark>\n\nThe Bizyness API allows customers to create and search for accounting objects such as invoices, clients, payments and to generate various reports.\n\nThis documentation provides information about each endpoint in the API. The right-hand pane of this page shows example requests and responses for each endpoint in cURL and many other languages.\n\n## Getting started\nFollow these steps to start licensing media:\n\n1. Create a Bizyness account\n\n2. Go in your Settings and create an API Key, you can also use the JWT method to authenticate your requests\n\n## Request/Response Format\nThe default response format is JSON. Requests with a message-body use plain JSON to set or update resource attributes. Successful requests will return a 200 OK HTTP status.\n\nSome general information about responses:\n\n- Dates are returned in Unix timestamp, see [Unix time](https://en.wikipedia.org/wiki/Unix_time).\n- Resource IDs are returned as strings.\n- Any decimal monetary amount, such as prices or totals, will be returned as numbers with two decimal places.\n- Other amounts, such as item counts, are returned as integers.\n\n## Errors\nThe API returns error codes such as 400, 403, 404, and 500 along with information about the error. Here are some common error responses:\n\nA 400 Bad Request response often means that the request body is improperly formatted or missing required fields. In the case of missing fields, the response includes the name of the field that is missing, as in the example in the right-hand column.\n\nA 401 Unauthorized response often means that the request did not include a valid authentication.\n\nA 404 Not Found response can mean that the object you are trying to access does not exist.\n\nA 500 Internal Server Error response means that an error happened on the server. This can mean that the request is not valid, such as if you try to delete or edit a collection that does not exist, or if the API otherwise can't do what you requested. It can also mean a temporary problem with the API. Check your request and try again or contact us.\n\n## Pagination\nRequests that return multiple items will be paginated to 100 items by default. Alternatively the items per page can be specified with the `?limit` parameter:\n\n`GET /invoices?limit=200`\n\nYou can specify further pages with the `?page` parameter:\n\n`GET /invoices?page=2`\n\nPage number is 1-based and omitting the `?page` parameter will return the first page.\n\n## Rate limits\nAll applications are limited to a certain number of API requests per minute. If your application exceeds its limit, the API returns an error response with a status code of 429.\n\nThe API supports a limit of 10 requests per second.\n"
  },
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/lpb/bizyness-api/1.0.0"
  }, {
    "url" : "https://api.bizyness.fr"
  } ],
  "tags" : [ {
    "name" : "Invoice",
    "description" : "Managing your invoices"
  }, {
    "name" : "Quote",
    "description" : "Managing your quotes"
  }, {
    "name" : "Payment",
    "description" : "Managing your payments"
  }, {
    "name" : "Expense",
    "description" : "Managing your expenses"
  }, {
    "name" : "Client",
    "description" : "Managing your clients"
  }, {
    "name" : "Supplier",
    "description" : "Managing your suppliers"
  }, {
    "name" : "Article",
    "description" : "Managing your articles"
  }, {
    "name" : "Bank",
    "description" : "Managing your reports"
  }, {
    "name" : "Activity",
    "description" : "Managing your activities"
  }, {
    "name" : "Report",
    "description" : "Managing your reports"
  }, {
    "name" : "Account",
    "description" : "Managing your account"
  }, {
    "name" : "Company",
    "description" : "Managing your account"
  }, {
    "name" : "Miscellaneous",
    "description" : "Transverval ressources"
  } ],
  "paths" : {
    "/invoices" : {
      "get" : {
        "tags" : [ "Invoice" ],
        "summary" : "List all invoices",
        "parameters" : [ {
          "$ref" : "#/components/parameters/PageParam"
        }, {
          "$ref" : "#/components/parameters/LimitParam"
        }, {
          "$ref" : "#/components/parameters/KeywordParam"
        }, {
          "$ref" : "#/components/parameters/DateMinParam"
        }, {
          "$ref" : "#/components/parameters/DateMaxParam"
        }, {
          "in" : "query",
          "name" : "status",
          "required" : false,
          "schema" : {
            "type" : "string",
            "example" : "draft"
          },
          "description" : "Filter invoices by their status"
        }, {
          "in" : "query",
          "name" : "client",
          "required" : false,
          "schema" : {
            "type" : "string",
            "example" : "5d5eca258126ab647499f9bf"
          },
          "description" : "Filter invoices by client"
        }, {
          "in" : "query",
          "name" : "activity",
          "required" : false,
          "schema" : {
            "type" : "string",
            "example" : "5d5eca258126ab647499f9bf"
          },
          "description" : "Filter invoices by activity"
        } ],
        "responses" : {
          "200" : {
            "description" : "Return the list of invoices",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceList"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "post" : {
        "tags" : [ "Invoice" ],
        "summary" : "Create an invoice",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InvoiceBody"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Invoice"
                }
              }
            },
            "description" : "Created invoice"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    },
    "/invoices/{id}/payments" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "Invoice ID",
        "required" : true,
        "schema" : {
          "type" : "string",
          "example" : "636945e14ce97a4c1c561885"
        }
      } ],
      "get" : {
        "tags" : [ "Invoice" ],
        "summary" : "Retrieve payments",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentList"
                }
              }
            },
            "description" : "List of payments"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "post" : {
        "tags" : [ "Invoice" ],
        "summary" : "Create an payment",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PaymentBody"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Invoice"
                }
              }
            },
            "description" : "Created invoice"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    },
    "/invoices/{id}/download" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "Invoice ID",
        "required" : true,
        "schema" : {
          "type" : "string",
          "example" : "636945e14ce97a4c1c561885"
        }
      } ],
      "get" : {
        "tags" : [ "Invoice" ],
        "summary" : "Download the PDF file",
        "responses" : {
          "200" : {
            "description" : "Return the PDF file",
            "content" : {
              "application/pdf" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                },
                "examples" : {
                  "sampleFile" : {
                    "summary" : "A sample file",
                    "externalValue" : "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf"
                  }
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    },
    "/invoices/{id}/attachments" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "Invoice ID",
        "required" : true,
        "schema" : {
          "type" : "string",
          "example" : "636945e14ce97a4c1c561885"
        }
      } ],
      "post" : {
        "tags" : [ "Invoice" ],
        "summary" : "Add a list of attachments",
        "requestBody" : {
          "required" : true,
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "format" : "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Invoice"
                }
              }
            },
            "description" : "Created invoice"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    },
    "/invoices/{id}/attachments/{attachmentId}" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "Invoice ID",
        "required" : true,
        "schema" : {
          "type" : "string",
          "example" : "636945e14ce97a4c1c561885"
        }
      }, {
        "name" : "attachmentId",
        "in" : "path",
        "description" : "Attachment index",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "example" : 0
        }
      } ],
      "delete" : {
        "tags" : [ "Invoice" ],
        "summary" : "Delete an attachment",
        "responses" : {
          "204" : {
            "description" : "The attachment was deleted successfully"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "get" : {
        "tags" : [ "Invoice" ],
        "summary" : "Download an attachment file",
        "responses" : {
          "200" : {
            "description" : "Return the attachment file",
            "content" : {
              "application/pdf" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                },
                "examples" : {
                  "sampleFile" : {
                    "summary" : "A sample file",
                    "externalValue" : "https://file-examples.com/storage/fe954b025e6370d449e6aa6/2017/10/file_example_PNG_500kB.png"
                  }
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    },
    "/invoices/{id}" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "Invoice ID",
        "required" : true,
        "schema" : {
          "type" : "string",
          "example" : "636945e14ce97a4c1c561885"
        }
      } ],
      "get" : {
        "tags" : [ "Invoice" ],
        "summary" : "Retrieve an invoice",
        "responses" : {
          "200" : {
            "description" : "Return a single invoice",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Invoice"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "delete" : {
        "tags" : [ "Invoice" ],
        "summary" : "Delete an invoice",
        "responses" : {
          "204" : {
            "description" : "The invoice was deleted successfully"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "put" : {
        "tags" : [ "Invoice" ],
        "summary" : "Update an invoice",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InvoiceBody"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated invoice",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Invoice"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "patch" : {
        "tags" : [ "Invoice" ],
        "summary" : "Update an invoice (partial)",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/JSONPatchRequestAddReplaceTest"
                  }, {
                    "$ref" : "#/components/schemas/JSONPatchRequestRemove"
                  }, {
                    "$ref" : "#/components/schemas/JSONPatchRequestMoveCopy"
                  } ]
                }
              },
              "examples" : {
                "AddReplaceTest" : {
                  "value" : [ {
                    "op" : "replace",
                    "path" : "/lines/0/type",
                    "value" : 1
                  } ]
                },
                "Remove" : {
                  "value" : [ {
                    "op" : "remove",
                    "path" : "/subject"
                  } ]
                },
                "MoveCopy" : {
                  "value" : [ {
                    "op" : "copy",
                    "from" : "/lines/0/sku",
                    "path" : "/lines/1/sku"
                  } ]
                }
              }
            },
            "application/merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Invoice"
              },
              "example" : {
                "payment_term" : 3,
                "template" : "london"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated invoice",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Invoice"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    },
    "/countries" : {
      "get" : {
        "tags" : [ "Miscellaneous" ],
        "summary" : "List all countries",
        "responses" : {
          "200" : {
            "description" : "Return the list of countries",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryList"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/reports/revenue/monthly" : {
      "parameters" : [ {
        "in" : "query",
        "name" : "month",
        "schema" : {
          "type" : "integer",
          "minimum" : 1,
          "maximum" : 12
        },
        "required" : true,
        "description" : "The month number of the year"
      }, {
        "in" : "query",
        "name" : "client",
        "schema" : {
          "type" : "string"
        },
        "required" : false,
        "description" : "Filter revenue by client"
      } ],
      "get" : {
        "tags" : [ "Report" ],
        "summary" : "Figures of the month",
        "responses" : {
          "200" : {
            "description" : "Return the figures of the month",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FiguresMonthReport"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/reports/revenue/yearly" : {
      "parameters" : [ {
        "in" : "query",
        "name" : "year",
        "schema" : {
          "type" : "integer"
        },
        "required" : true,
        "description" : "The year"
      }, {
        "in" : "query",
        "name" : "client",
        "schema" : {
          "type" : "string"
        },
        "required" : false,
        "description" : "Filter revenue by client"
      } ],
      "get" : {
        "tags" : [ "Report" ],
        "summary" : "Figures of the year",
        "responses" : {
          "200" : {
            "description" : "Return the figures of the year",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FiguresYearReport"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/reports/urssaf/current" : {
      "get" : {
        "tags" : [ "Report" ],
        "summary" : "URSSAF statement",
        "responses" : {
          "200" : {
            "description" : "Return the URSSAF statement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/URSSAFReportStatement"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/articles" : {
      "get" : {
        "tags" : [ "Article" ],
        "summary" : "List all articles",
        "parameters" : [ {
          "$ref" : "#/components/parameters/KeywordParam"
        }, {
          "$ref" : "#/components/parameters/PageParam"
        }, {
          "$ref" : "#/components/parameters/LimitParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "Return the list of articles",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArticleList"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "post" : {
        "tags" : [ "Article" ],
        "summary" : "Create an article",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ArticleBody"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Invoice"
                }
              }
            },
            "description" : "Created invoice"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    },
    "/articles/{id}" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "Article ID",
        "required" : true,
        "schema" : {
          "type" : "string",
          "example" : "636945f14ce97a4c1c561885"
        }
      } ],
      "get" : {
        "tags" : [ "Article" ],
        "summary" : "Retrieve an article",
        "responses" : {
          "200" : {
            "description" : "Return a single article",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Article"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "delete" : {
        "tags" : [ "Article" ],
        "summary" : "Delete an article",
        "responses" : {
          "204" : {
            "description" : "The article was deleted successfully"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "put" : {
        "tags" : [ "Article" ],
        "summary" : "Update an article",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ArticleBody"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated article",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Invoice"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "patch" : {
        "tags" : [ "Article" ],
        "summary" : "Update an article (partial)",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/JSONPatchRequestAddReplaceTest"
                  }, {
                    "$ref" : "#/components/schemas/JSONPatchRequestRemove"
                  }, {
                    "$ref" : "#/components/schemas/JSONPatchRequestMoveCopy"
                  } ]
                }
              },
              "examples" : {
                "AddReplaceTest" : {
                  "value" : [ {
                    "op" : "replace",
                    "path" : "/manufacturer",
                    "value" : "Google"
                  } ]
                },
                "Remove" : {
                  "value" : [ {
                    "op" : "remove",
                    "path" : "/manufacturer"
                  } ]
                },
                "MoveCopy" : {
                  "value" : [ {
                    "op" : "copy",
                    "from" : "/title",
                    "path" : "/description"
                  } ]
                }
              }
            },
            "application/merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Article"
              },
              "example" : {
                "payment_term" : 3,
                "template" : "london"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated article",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Article"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    },
    "/activities" : {
      "get" : {
        "tags" : [ "Activity" ],
        "summary" : "List all activities",
        "parameters" : [ {
          "$ref" : "#/components/parameters/PageParam"
        }, {
          "$ref" : "#/components/parameters/LimitParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "Return the list of activities",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityList"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "post" : {
        "tags" : [ "Activity" ],
        "summary" : "Create an activity",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActivityBody"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Activity"
                }
              }
            },
            "description" : "Created activity"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    },
    "/activities/{id}" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "Activity ID",
        "required" : true,
        "schema" : {
          "type" : "string",
          "example" : "636945f14ce97a4c1c561885"
        }
      } ],
      "get" : {
        "tags" : [ "Activity" ],
        "summary" : "Retrieve an activity",
        "responses" : {
          "200" : {
            "description" : "Return a single activity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Activity"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "delete" : {
        "tags" : [ "Activity" ],
        "summary" : "Delete an activity",
        "responses" : {
          "204" : {
            "description" : "The activity was deleted successfully"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "put" : {
        "tags" : [ "Activity" ],
        "summary" : "Update an activity",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActivityBody"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated activity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Activity"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "patch" : {
        "tags" : [ "Activity" ],
        "summary" : "Update an activity (partial)",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/JSONPatchRequestAddReplaceTest"
                  }, {
                    "$ref" : "#/components/schemas/JSONPatchRequestRemove"
                  }, {
                    "$ref" : "#/components/schemas/JSONPatchRequestMoveCopy"
                  } ]
                }
              },
              "examples" : {
                "AddReplaceTest" : {
                  "value" : [ {
                    "op" : "replace",
                    "path" : "/name",
                    "value" : "My activity"
                  } ]
                },
                "Remove" : {
                  "value" : [ {
                    "op" : "remove",
                    "path" : "/name"
                  } ]
                },
                "MoveCopy" : {
                  "value" : [ {
                    "op" : "copy",
                    "from" : "/name",
                    "path" : "/name"
                  } ]
                }
              }
            },
            "application/merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Activity"
              },
              "example" : {
                "payment_term" : 3,
                "template" : "london"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated activity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Activity"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    },
    "/users/me" : {
      "get" : {
        "tags" : [ "Account" ],
        "summary" : "Get current account",
        "responses" : {
          "200" : {
            "description" : "Return the connected account",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Account"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "put" : {
        "tags" : [ "Account" ],
        "summary" : "Update current account",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountBody"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated account",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Account"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "patch" : {
        "tags" : [ "Account" ],
        "summary" : "Update current account (partial)",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/JSONPatchRequestAddReplaceTest"
                  }, {
                    "$ref" : "#/components/schemas/JSONPatchRequestRemove"
                  }, {
                    "$ref" : "#/components/schemas/JSONPatchRequestMoveCopy"
                  } ]
                }
              },
              "examples" : {
                "AddReplaceTest" : {
                  "value" : [ {
                    "op" : "replace",
                    "path" : "/last_name",
                    "value" : "Dupont"
                  } ]
                },
                "Remove" : {
                  "value" : [ {
                    "op" : "remove",
                    "path" : "/last_name"
                  } ]
                },
                "MoveCopy" : {
                  "value" : [ {
                    "op" : "copy",
                    "from" : "/last_name",
                    "path" : "/last_name"
                  } ]
                }
              }
            },
            "application/merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountBody"
              },
              "example" : {
                "payment_term" : 3,
                "template" : "london"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated account",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Account"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    },
    "/companies/my" : {
      "get" : {
        "tags" : [ "Company" ],
        "summary" : "Get current company",
        "responses" : {
          "200" : {
            "description" : "Return the connected company",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Company"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "put" : {
        "tags" : [ "Company" ],
        "summary" : "Update current company",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CompanyBody"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated company",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Company"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "patch" : {
        "tags" : [ "Company" ],
        "summary" : "Update current company (partial)",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/JSONPatchRequestAddReplaceTest"
                  }, {
                    "$ref" : "#/components/schemas/JSONPatchRequestRemove"
                  }, {
                    "$ref" : "#/components/schemas/JSONPatchRequestMoveCopy"
                  } ]
                }
              },
              "examples" : {
                "AddReplaceTest" : {
                  "value" : [ {
                    "op" : "replace",
                    "path" : "/last_name",
                    "value" : "Dupont"
                  } ]
                },
                "Remove" : {
                  "value" : [ {
                    "op" : "remove",
                    "path" : "/last_name"
                  } ]
                },
                "MoveCopy" : {
                  "value" : [ {
                    "op" : "copy",
                    "from" : "/last_name",
                    "path" : "/last_name"
                  } ]
                }
              }
            },
            "application/merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CompanyBody"
              },
              "example" : {
                "payment_term" : 3,
                "template" : "london"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated company",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Company"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    },
    "/banks/transactions" : {
      "get" : {
        "tags" : [ "Bank" ],
        "summary" : "List all transactions",
        "parameters" : [ {
          "$ref" : "#/components/parameters/PageParam"
        }, {
          "$ref" : "#/components/parameters/LimitParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "Return the list of transactions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BankTransactionList"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    },
    "/clients" : {
      "get" : {
        "tags" : [ "Client" ],
        "summary" : "List all clients",
        "parameters" : [ {
          "$ref" : "#/components/parameters/PageParam"
        }, {
          "$ref" : "#/components/parameters/LimitParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "Return the list of clients",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClientList"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    },
    "/clients/{id}/attachments" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "Client ID",
        "required" : true,
        "schema" : {
          "type" : "string",
          "example" : "636945e14ce97a4c1c561885"
        }
      } ],
      "post" : {
        "tags" : [ "Client" ],
        "summary" : "Add a list of attachments",
        "requestBody" : {
          "required" : true,
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "format" : "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Client"
                }
              }
            },
            "description" : "Created client"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    },
    "/clients/{id}/attachments/{attachmentId}" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "Client ID",
        "required" : true,
        "schema" : {
          "type" : "string",
          "example" : "636945e14ce97a4c1c561885"
        }
      }, {
        "name" : "attachmentId",
        "in" : "path",
        "description" : "Attachment index",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "example" : 0
        }
      } ],
      "delete" : {
        "tags" : [ "Client" ],
        "summary" : "Delete an attachment",
        "responses" : {
          "204" : {
            "description" : "The attachment was deleted successfully"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "get" : {
        "tags" : [ "Client" ],
        "summary" : "Download an attachment file",
        "responses" : {
          "200" : {
            "description" : "Return the attachment file",
            "content" : {
              "application/pdf" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                },
                "examples" : {
                  "sampleFile" : {
                    "summary" : "A sample file",
                    "externalValue" : "https://file-examples.com/storage/fe954b025e6370d449e6aa6/2017/10/file_example_PNG_500kB.png"
                  }
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    },
    "/clients/{id}" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "Client ID",
        "required" : true,
        "schema" : {
          "type" : "string",
          "example" : "636945f14ce97a4c1c561885"
        }
      } ],
      "get" : {
        "tags" : [ "Client" ],
        "summary" : "Retrieve a client",
        "responses" : {
          "200" : {
            "description" : "Return a single client",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Client"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "delete" : {
        "tags" : [ "Client" ],
        "summary" : "Delete a client",
        "responses" : {
          "204" : {
            "description" : "The client was deleted successfully"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "put" : {
        "tags" : [ "Client" ],
        "summary" : "Update a client",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ClientBody"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated client",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Client"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "patch" : {
        "tags" : [ "Client" ],
        "summary" : "Update a client (partial)",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/JSONPatchRequestAddReplaceTest"
                  }, {
                    "$ref" : "#/components/schemas/JSONPatchRequestRemove"
                  }, {
                    "$ref" : "#/components/schemas/JSONPatchRequestMoveCopy"
                  } ]
                }
              },
              "examples" : {
                "AddReplaceTest" : {
                  "value" : [ {
                    "op" : "replace",
                    "path" : "/last_name",
                    "value" : "Dupont"
                  } ]
                },
                "Remove" : {
                  "value" : [ {
                    "op" : "remove",
                    "path" : "/address_supplement"
                  } ]
                },
                "MoveCopy" : {
                  "value" : [ {
                    "op" : "copy",
                    "from" : "/address",
                    "path" : "/address_supplement"
                  } ]
                }
              }
            },
            "application/merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Client"
              },
              "example" : {
                "payment_term" : 3,
                "template" : "london"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated client",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Client"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    },
    "/payments" : {
      "get" : {
        "tags" : [ "Payment" ],
        "summary" : "List all payments",
        "parameters" : [ {
          "$ref" : "#/components/parameters/PageParam"
        }, {
          "$ref" : "#/components/parameters/LimitParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "Return the list of payments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentList"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    },
    "/payments/{id}" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "Payment ID",
        "required" : true,
        "schema" : {
          "type" : "string",
          "example" : "636945f14ce97a4c1c561885"
        }
      } ],
      "get" : {
        "tags" : [ "Payment" ],
        "summary" : "Retrieve a payment",
        "responses" : {
          "200" : {
            "description" : "Return a single payment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Payment"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "delete" : {
        "tags" : [ "Payment" ],
        "summary" : "Delete a payment",
        "responses" : {
          "204" : {
            "description" : "The payment was deleted successfully"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "put" : {
        "tags" : [ "Payment" ],
        "summary" : "Update a payment",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PaymentBody"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated payment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Payment"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "patch" : {
        "tags" : [ "Payment" ],
        "summary" : "Update a payment (partial)",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/JSONPatchRequestAddReplaceTest"
                  }, {
                    "$ref" : "#/components/schemas/JSONPatchRequestRemove"
                  }, {
                    "$ref" : "#/components/schemas/JSONPatchRequestMoveCopy"
                  } ]
                }
              },
              "examples" : {
                "AddReplaceTest" : {
                  "value" : [ {
                    "op" : "replace",
                    "path" : "/label",
                    "value" : "Other subscription"
                  } ]
                },
                "Remove" : {
                  "value" : [ {
                    "op" : "remove",
                    "path" : "/label"
                  } ]
                },
                "MoveCopy" : {
                  "value" : [ {
                    "op" : "copy",
                    "from" : "/label",
                    "path" : "/notes"
                  } ]
                }
              }
            },
            "application/merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Payment"
              },
              "example" : {
                "payment_term" : 3,
                "template" : "london"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated article",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Payment"
                }
              }
            }
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    }
  },
  "components" : {
    "parameters" : {
      "PageParam" : {
        "in" : "query",
        "name" : "page",
        "required" : false,
        "schema" : {
          "type" : "integer",
          "minimum" : 1,
          "default" : 1
        },
        "description" : "The page of results to return"
      },
      "LimitParam" : {
        "in" : "query",
        "name" : "limit",
        "required" : false,
        "schema" : {
          "type" : "integer",
          "minimum" : 1,
          "maximum" : 250,
          "default" : 100
        },
        "description" : "The number of records to return in one request"
      },
      "KeywordParam" : {
        "in" : "query",
        "name" : "keyword",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "description" : "The keyword to search for"
      },
      "DateMinParam" : {
        "in" : "query",
        "name" : "date_min",
        "required" : false,
        "schema" : {
          "type" : "integer",
          "example" : 1566493220992
        },
        "description" : "Filter invoices created at or after date"
      },
      "DateMaxParam" : {
        "in" : "query",
        "name" : "date_max",
        "required" : false,
        "schema" : {
          "type" : "integer",
          "example" : 1586493220992
        },
        "description" : "Filter invoices created at or before date"
      }
    },
    "responses" : {
      "NotFound" : {
        "description" : "The specified resource was not found",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            },
            "example" : {
              "code" : 404,
              "message" : "Resource not found"
            }
          }
        }
      },
      "Unauthorized" : {
        "description" : "Unauthorized",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            },
            "example" : {
              "code" : 401,
              "message" : "Unauthorized"
            }
          }
        }
      },
      "InternalServerError" : {
        "description" : "Internal Server Error",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            },
            "example" : {
              "code" : 500,
              "message" : "Internal server error"
            }
          }
        }
      }
    },
    "schemas" : {
      "Error" : {
        "type" : "object",
        "required" : [ "message", "code" ],
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "The error message indicating what the issue is"
          },
          "code" : {
            "type" : "integer",
            "description" : "The http status code"
          }
        }
      },
      "JSONPatchRequestAddReplaceTest" : {
        "type" : "object",
        "additionalProperties" : false,
        "required" : [ "value", "op", "path" ],
        "properties" : {
          "path" : {
            "description" : "A JSON Pointer path.",
            "type" : "string"
          },
          "value" : {
            "description" : "The value to add, replace or test."
          }
        }
      },
      "JSONPatchRequestRemove" : {
        "type" : "object",
        "additionalProperties" : false,
        "required" : [ "op", "path" ],
        "properties" : {
          "path" : {
            "description" : "A JSON Pointer path.",
            "type" : "string"
          },
          "op" : {
            "description" : "The operation to perform.",
            "type" : "string",
            "enum" : [ "remove" ]
          }
        }
      },
      "JSONPatchRequestMoveCopy" : {
        "type" : "object",
        "additionalProperties" : false,
        "required" : [ "from", "op", "path" ],
        "properties" : {
          "path" : {
            "description" : "A JSON Pointer path.",
            "type" : "string"
          },
          "op" : {
            "description" : "The operation to perform.",
            "type" : "string",
            "enum" : [ "move", "copy" ]
          }
        }
      },
      "ArticleBody" : {
        "type" : "object",
        "properties" : {
          "manufacturer" : {
            "type" : "string",
            "example" : "Apple"
          },
          "origin_country" : {
            "type" : "string",
            "example" : "FR"
          },
          "price" : {
            "type" : "number",
            "example" : 10.32
          },
          "purchase_price" : {
            "type" : "number",
            "example" : 10.32
          },
          "sku" : {
            "type" : "string",
            "example" : "AZ123"
          },
          "title" : {
            "type" : "string",
            "example" : "Shirt"
          },
          "description" : {
            "type" : "string",
            "example" : "Size M"
          },
          "tax_rate" : {
            "type" : "number",
            "example" : 20
          },
          "type" : {
            "type" : "number",
            "example" : 0
          },
          "taxes_included" : {
            "type" : "boolean"
          },
          "second_hand_good" : {
            "type" : "boolean"
          }
        }
      },
      "Article" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CollectionId"
        }, {
          "$ref" : "#/components/schemas/ArticleBody"
        } ]
      },
      "Country" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "example" : "FR"
          },
          "eu_member" : {
            "type" : "boolean"
          },
          "label" : {
            "type" : "object",
            "properties" : {
              "fr" : {
                "type" : "string",
                "example" : "France"
              },
              "en" : {
                "type" : "string",
                "example" : "France"
              }
            }
          }
        }
      },
      "URSSAFReportStatement" : {
        "type" : "object",
        "properties" : {
          "period" : {
            "type" : "integer",
            "example" : 1651356000000
          },
          "dueDate" : {
            "type" : "integer",
            "example" : 1656540000000
          },
          "distanceSalesAmount" : {
            "type" : "integer",
            "example" : 1235
          },
          "servicesAmount" : {
            "type" : "integer",
            "example" : 554
          },
          "otherServicesAmount" : {
            "type" : "integer",
            "example" : 787
          },
          "estimate" : {
            "type" : "integer",
            "example" : 457
          }
        }
      },
      "FiguresReportTotal" : {
        "type" : "object",
        "properties" : {
          "margin" : {
            "type" : "integer",
            "example" : 32483
          },
          "incomes" : {
            "type" : "integer",
            "example" : 6013
          },
          "expenses" : {
            "type" : "integer",
            "example" : 214
          },
          "variation" : {
            "type" : "integer",
            "example" : 10.3
          }
        }
      },
      "FiguresMonthReport" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "$ref" : "#/components/schemas/FiguresReportTotal"
          },
          "months" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FiguresReportMonthItem"
            },
            "example" : [ {
              "month" : 1,
              "margin" : -393,
              "incomes" : 456,
              "expenses" : 849
            }, {
              "month" : 2,
              "margin" : 4507,
              "incomes" : 4556,
              "expenses" : 49
            } ]
          }
        }
      },
      "FiguresReportMonthItem" : {
        "type" : "object",
        "properties" : {
          "month" : {
            "type" : "integer"
          },
          "margin" : {
            "type" : "integer"
          },
          "incomes" : {
            "type" : "integer"
          },
          "expenses" : {
            "type" : "integer"
          }
        }
      },
      "FiguresYearReport" : {
        "type" : "object",
        "properties" : {
          "start" : {
            "type" : "integer",
            "example" : 2022
          },
          "total" : {
            "$ref" : "#/components/schemas/FiguresReportTotal"
          },
          "months" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FiguresReportMonthItem"
            },
            "example" : [ {
              "month" : 1,
              "margin" : -393,
              "incomes" : 456,
              "expenses" : 849
            }, {
              "month" : 2,
              "margin" : 4507,
              "incomes" : 4556,
              "expenses" : 49
            } ]
          }
        }
      },
      "Activity" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CollectionId"
        }, {
          "$ref" : "#/components/schemas/ActivityBody"
        } ]
      },
      "ActivityBody" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "My activity"
          },
          "is_default" : {
            "type" : "boolean"
          }
        }
      },
      "Payment" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CollectionId"
        }, {
          "$ref" : "#/components/schemas/PaymentBody"
        } ]
      },
      "PaymentBody" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "integer",
            "example" : 123.21
          },
          "currency" : {
            "type" : "string",
            "example" : "EUR"
          },
          "label" : {
            "type" : "string",
            "example" : "Subscription"
          },
          "date" : {
            "type" : "integer",
            "example" : 1566493220992
          },
          "comment" : {
            "type" : "string",
            "example" : "Client will provide the next payment tomorrow"
          },
          "method" : {
            "$ref" : "#/components/schemas/PaymentMethod"
          }
        }
      },
      "Client" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CollectionId"
        }, {
          "$ref" : "#/components/schemas/ClientBody"
        }, {
          "type" : "object",
          "properties" : {
            "attachments" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "example" : [ "myfile1.png", "mydocument.pdf" ]
              }
            }
          }
        } ]
      },
      "ClientBody" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "enum" : [ "individual", "company" ],
            "type" : "string"
          },
          "last_name" : {
            "type" : "string",
            "example" : "Doe"
          },
          "first_name" : {
            "type" : "string",
            "example" : "John"
          },
          "email" : {
            "type" : "string",
            "example" : "john.doe@google.com"
          },
          "phone" : {
            "type" : "string",
            "example" : 6215410124
          },
          "company_name" : {
            "type" : "string",
            "example" : "Doe's company"
          },
          "address" : {
            "type" : "string",
            "example" : "123 rue des archives"
          },
          "address_supplement" : {
            "type" : "string",
            "example" : "Porte gauche"
          },
          "zip" : {
            "type" : "string",
            "example" : "A1234"
          },
          "city" : {
            "type" : "string",
            "example" : "Paris"
          },
          "country_code" : {
            "type" : "string",
            "example" : "FR"
          },
          "vat_number" : {
            "type" : "string",
            "example" : "FR123456789"
          },
          "notes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Note"
            },
            "example" : [ {
              "date" : 1566493220992,
              "title" : "My first note",
              "content" : "This the content of this wonderful note"
            }, {
              "date" : 1586493220992,
              "title" : "Another note",
              "content" : "Just another note content"
            } ]
          }
        }
      },
      "Note" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CollectionId"
        }, {
          "$ref" : "#/components/schemas/NoteBody"
        } ]
      },
      "NoteBody" : {
        "type" : "object",
        "properties" : {
          "date" : {
            "type" : "integer",
            "example" : 1566493220992
          },
          "title" : {
            "type" : "string",
            "example" : "My first note"
          },
          "content" : {
            "type" : "string",
            "example" : "This the content of this wonderful note"
          }
        }
      },
      "PaymentMethod" : {
        "enum" : [ "bank_transfer", "cash", "check", "cesu", "direct_debit", "credit_card", "paypal", "other" ],
        "type" : "string"
      },
      "ListSummaryItem" : {
        "type" : "object",
        "properties" : {
          "size" : {
            "type" : "integer"
          },
          "amount" : {
            "type" : "number"
          }
        }
      },
      "InvoiceListSummary" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "$ref" : "#/components/schemas/ListSummaryItem"
          },
          "paid" : {
            "$ref" : "#/components/schemas/ListSummaryItem"
          },
          "unpaid" : {
            "$ref" : "#/components/schemas/ListSummaryItem"
          },
          "overdue" : {
            "$ref" : "#/components/schemas/ListSummaryItem"
          },
          "draft" : {
            "$ref" : "#/components/schemas/ListSummaryItem"
          }
        },
        "example" : {
          "total" : {
            "size" : 123,
            "amount" : 1203.54
          },
          "paid" : {
            "size" : 110,
            "amount" : 1052.23
          },
          "unpaid" : {
            "size" : 2,
            "amount" : 100
          },
          "overdue" : {
            "size" : 6,
            "amount" : 32.3
          },
          "draft" : {
            "size" : 5,
            "amount" : 19.01
          }
        }
      },
      "InvoiceList" : {
        "type" : "object",
        "properties" : {
          "summary" : {
            "$ref" : "#/components/schemas/InvoiceListSummary"
          },
          "invoices" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Invoice"
            }
          }
        }
      },
      "ClientList" : {
        "type" : "object",
        "properties" : {
          "clients" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Client"
            }
          }
        }
      },
      "PaymentList" : {
        "type" : "object",
        "properties" : {
          "payments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Payment"
            }
          }
        }
      },
      "ActivityList" : {
        "type" : "object",
        "properties" : {
          "activities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Activity"
            }
          }
        }
      },
      "BankTransactionList" : {
        "type" : "object",
        "properties" : {
          "balance" : {
            "type" : "integer",
            "example" : 3214
          },
          "transactions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BankTransaction"
            }
          }
        }
      },
      "ArticleList" : {
        "type" : "object",
        "properties" : {
          "activities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Article"
            }
          }
        }
      },
      "CountryList" : {
        "type" : "object",
        "properties" : {
          "countries" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Country"
            }
          }
        }
      },
      "CollectionId" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "5d5eca258126ab647499f9bf"
          }
        }
      },
      "BillOfSaleEvents" : {
        "type" : "object",
        "properties" : {
          "events" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "date" : {
                  "type" : "integer"
                },
                "key" : {
                  "type" : "string"
                },
                "values" : {
                  "type" : "array",
                  "items" : {
                    "oneOf" : [ {
                      "type" : "string"
                    }, {
                      "type" : "integer"
                    } ]
                  }
                }
              }
            },
            "example" : [ {
              "date" : 1566493220992,
              "key" : "invoice.history.paymentAdded",
              "values" : [ "€", 23 ]
            }, {
              "date" : 1566423220992,
              "key" : "invoice.history.issued",
              "values" : [ ]
            } ]
          }
        }
      },
      "BillOfSaleAmounts" : {
        "type" : "object",
        "properties" : {
          "total_including_taxes" : {
            "type" : "number",
            "example" : 123.54
          },
          "total_excluding_taxes" : {
            "type" : "number",
            "example" : 98.12
          }
        }
      },
      "ExternalReference" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string",
            "example" : "5d5eca258126ab647499f9bf"
          },
          "identifier" : {
            "type" : "string",
            "example" : "John Doe"
          }
        }
      },
      "ContactAddress" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Address"
        }, {
          "type" : "object",
          "properties" : {
            "last_name" : {
              "type" : "string",
              "example" : "Doe"
            },
            "first_name" : {
              "type" : "string",
              "example" : "John"
            },
            "company_name" : {
              "type" : "string",
              "example" : "John's company"
            },
            "vat_number" : {
              "type" : "string",
              "example" : "FR123456789"
            }
          }
        } ]
      },
      "Address" : {
        "type" : "object",
        "properties" : {
          "address" : {
            "type" : "string",
            "example" : "123 rue des archives"
          },
          "address_supplement" : {
            "type" : "string",
            "example" : "Porte gauche"
          },
          "zip" : {
            "type" : "string",
            "example" : "A1234"
          },
          "city" : {
            "type" : "string",
            "example" : "Paris"
          },
          "country_code" : {
            "type" : "string",
            "example" : "FR"
          }
        }
      },
      "BillOfSaleLine" : {
        "type" : "object",
        "properties" : {
          "sku" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "type" : {
            "type" : "integer"
          },
          "price" : {
            "type" : "number"
          },
          "quantity" : {
            "type" : "number"
          },
          "unit" : {
            "enum" : [ "piece", "hour", "day", "meter", "kilometer", "kilogram", "square_meter" ],
            "type" : "string"
          },
          "discount_amount" : {
            "type" : "number"
          },
          "discount_type" : {
            "enum" : [ "percentage", "fixed" ],
            "type" : "string"
          },
          "tax_rate" : {
            "type" : "number"
          },
          "origin_country" : {
            "type" : "string"
          },
          "second_hand_good" : {
            "type" : "boolean"
          }
        }
      },
      "BillOfSaleBody" : {
        "type" : "object",
        "properties" : {
          "currency" : {
            "type" : "string",
            "example" : "EUR"
          },
          "is_draft" : {
            "type" : "boolean"
          },
          "payment_term" : {
            "type" : "integer",
            "example" : 1
          },
          "discount_amount" : {
            "type" : "number",
            "example" : 12.2
          },
          "discount_type" : {
            "enum" : [ "percentage", "fixed" ],
            "type" : "string"
          },
          "rebate" : {
            "type" : "number",
            "example" : 10
          },
          "activity" : {
            "type" : "string",
            "example" : "5d5efds258126ab647499f9bf"
          },
          "template" : {
            "enum" : [ "basic", "london", "paris", "berlin" ],
            "type" : "string"
          },
          "shipping_amount" : {
            "type" : "number",
            "example" : 4.5
          },
          "shipping_tax_rate" : {
            "type" : "number",
            "example" : 20
          },
          "taxes_liable" : {
            "type" : "boolean"
          },
          "taxes_included" : {
            "type" : "boolean"
          },
          "client" : {
            "$ref" : "#/components/schemas/ExternalReference"
          },
          "billing_address" : {
            "$ref" : "#/components/schemas/ContactAddress"
          },
          "subject" : {
            "type" : "string",
            "example" : "Design of the homepage"
          },
          "lines" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BillOfSaleLine"
            },
            "example" : [ {
              "sku" : "AX123",
              "description" : "Mockup and copywriting",
              "title" : "Homepage design",
              "type" : 0,
              "price" : 120.32,
              "quantity" : 1,
              "unit" : "piece",
              "discount_amount" : 10,
              "discount_type" : "percentage",
              "tax_rate" : 20,
              "origin_country" : "FR",
              "second_hand_good" : false
            }, {
              "sku" : "AX456",
              "description" : "Logo with 3 colors",
              "title" : "Logo design",
              "type" : 0,
              "price" : 59,
              "quantity" : 1,
              "unit" : "piece",
              "discount_amount" : 0,
              "discount_type" : "percentage",
              "tax_rate" : 20,
              "origin_country" : "FR",
              "second_hand_good" : false
            } ]
          },
          "lines_groups" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "name" : {
                  "type" : "string"
                },
                "articles" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer"
                  }
                }
              }
            },
            "example" : [ {
              "name" : "Design and mockup",
              "articles" : [ 0, 1 ]
            } ]
          },
          "comments" : {
            "type" : "string",
            "example" : "Payment to be done within 3 days"
          },
          "payment_conditions_included" : {
            "type" : "boolean"
          },
          "language" : {
            "enum" : [ "fr", "en", "de", "es", "it" ],
            "type" : "string"
          },
          "tax_exemption_text" : {
            "type" : "string",
            "example" : "Article 138 CE/2008"
          },
          "payment_methods" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "InvoiceBody" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BillOfSaleBody"
        }, {
          "type" : "object",
          "properties" : {
            "execution_date" : {
              "type" : "integer",
              "example" : 1566493220992
            },
            "online_payment_enabled" : {
              "type" : "boolean",
              "example" : 1566493220992
            },
            "payment_gateways" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "example" : [ "5d5eca258126ab647499f9bf", "5b17da549a7feb695f703975" ]
              }
            },
            "tracking_numbers" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "example" : [ "456SDFDFD" ]
              }
            },
            "tracking_carriers" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "example" : [ "UPS" ]
              }
            }
          }
        } ]
      },
      "BankTransaction" : {
        "type" : "object",
        "properties" : {
          "date" : {
            "type" : "integer",
            "example" : 1566493220992
          },
          "label" : {
            "type" : "string",
            "example" : "Facebook ads"
          },
          "amount" : {
            "type" : "integer",
            "example" : 52.04
          }
        }
      },
      "Invoice" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CollectionId"
        }, {
          "$ref" : "#/components/schemas/InvoiceBody"
        }, {
          "$ref" : "#/components/schemas/BillOfSaleEvents"
        }, {
          "$ref" : "#/components/schemas/BillOfSaleAmounts"
        }, {
          "type" : "object",
          "properties" : {
            "status" : {
              "enum" : [ "draft", "not_paid", "paid", "cancelled", "overdue" ],
              "type" : "string"
            },
            "paid_date" : {
              "type" : "integer",
              "example" : 1566493220992
            },
            "attachments" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "example" : [ "myfile1.png", "mydocument.pdf" ]
              }
            }
          }
        } ]
      },
      "AccountBody" : {
        "type" : "object",
        "properties" : {
          "first_name" : {
            "type" : "string",
            "example" : "John"
          },
          "last_name" : {
            "type" : "string",
            "example" : "Doe"
          },
          "email" : {
            "type" : "string",
            "example" : "john@google.com"
          }
        }
      },
      "Account" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/AccountBody"
        }, {
          "type" : "object",
          "properties" : {
            "billing_provider" : {
              "type" : "string",
              "example" : "chargebee"
            },
            "first_name" : {
              "type" : "string",
              "example" : "John"
            },
            "last_name" : {
              "type" : "string",
              "example" : "Doe"
            },
            "display_name" : {
              "type" : "string",
              "example" : "John Doe"
            },
            "email" : {
              "type" : "string",
              "example" : "john@google.com"
            },
            "subscription_status" : {
              "enum" : [ "trial", "active", "suspended" ],
              "type" : "string"
            }
          }
        } ]
      },
      "CompanyBody" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Address"
        }, {
          "type" : "object",
          "properties" : {
            "company_name" : {
              "type" : "string",
              "example" : "John's company"
            },
            "trade_name" : {
              "type" : "string",
              "example" : "Supercar"
            },
            "email" : {
              "type" : "string",
              "example" : "john@google.com"
            },
            "phone" : {
              "type" : "string",
              "example" : 456123456789
            },
            "mobile" : {
              "type" : "string",
              "example" : 321564987
            },
            "registration_type" : {
              "type" : "integer",
              "example" : 0
            },
            "company_identifier" : {
              "type" : "string",
              "example" : "123456DS"
            },
            "vat_number" : {
              "type" : "string",
              "example" : "123456DS"
            },
            "insurance_type" : {
              "type" : "integer",
              "example" : 0
            },
            "insurance_company_name" : {
              "type" : "string",
              "example" : "Super Insurance Company"
            },
            "insurance_geographic_coverage" : {
              "type" : "string",
              "example" : "France"
            },
            "activity_type" : {
              "type" : "integer",
              "example" : 0
            },
            "second_hand_goods_selling" : {
              "type" : "boolean"
            },
            "urssaf_statement_frequency" : {
              "type" : "string",
              "enum" : [ "montly", "quarterly" ]
            },
            "income_tax_discharged" : {
              "type" : "boolean"
            },
            "acre_applied" : {
              "type" : "boolean"
            },
            "creation_date" : {
              "type" : "number",
              "example" : 1566493220992
            }
          }
        } ]
      },
      "Company" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CompanyBody"
        }, {
          "type" : "object",
          "properties" : {
            "status" : {
              "type" : "integer",
              "example" : 0
            },
            "logo" : {
              "type" : "string",
              "example" : "logo-company-123456789.png"
            }
          }
        } ]
      }
    },
    "securitySchemes" : {
      "ApiKey" : {
        "type" : "apiKey",
        "name" : "X-Api-Key",
        "in" : "header"
      },
      "JWTAuth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  },
  "security" : [ {
    "ApiKey" : [ ]
  }, {
    "JWTAuth" : [ ]
  } ]
}