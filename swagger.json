{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "Bizyness API Documentation",
    "description" : "Bizyness is an accounting software that helps entrepreneurs to manage their activities with ease.\n\n# Introduction\nThis API provides endpoints to manage the data in your Bizyness account.\n\n# Authentication\n\nBizyness offers two forms of authentication:\n- API Key\n- JWT Token\n\n<SecurityDefinitions />\n",
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/lpb/bizyness-api/1.0.0",
    "description" : "SwaggerHub API Auto Mocking"
  }, {
    "url" : "https://api.bizyness.fr"
  } ],
  "security" : [ {
    "ApiKey" : [ ]
  }, {
    "JWTAuth" : [ ]
  } ],
  "tags" : [ {
    "name" : "Invoice",
    "description" : "Managing your invoices"
  }, {
    "name" : "Quote",
    "description" : "Managing your quotes"
  }, {
    "name" : "Activity",
    "description" : "Managing your activities"
  }, {
    "name" : "Client",
    "description" : "Managing your clients"
  }, {
    "name" : "Supplier",
    "description" : "Managing your suppliers"
  }, {
    "name" : "Article",
    "description" : "Managing your articles"
  }, {
    "name" : "Miscellaneous",
    "description" : "Transverval ressources"
  } ],
  "paths" : {
    "/invoices" : {
      "get" : {
        "tags" : [ "Invoice" ],
        "summary" : "Retrieve all invoices",
        "responses" : {
          "200" : {
            "description" : "Return the list of invoices",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 500,
                  "message" : "Internal server error"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 403,
                  "message" : "Unauthorized"
                }
              }
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 404,
                  "message" : "Resource not found"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Invoice" ],
        "summary" : "Create a new invoice",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/invoices_body"
              },
              "example" : {
                "currency" : "EUR",
                "status" : "draft",
                "payment_term" : 1,
                "discount_amount" : 10,
                "discount_type" : "percentage",
                "rebate" : 0,
                "activity" : "5d5efds258126ab647499f9bf",
                "template" : "basic",
                "shipping_amount" : 3.3,
                "shipping_vat" : 20,
                "vat_liable" : true,
                "vat_included" : true,
                "client" : {
                  "label" : "5d5eca258126ab647499f9bf",
                  "identifier" : "John Doe"
                },
                "billing_address" : {
                  "last_name" : "Doe",
                  "first_name" : "John",
                  "company_name" : "John's company",
                  "address" : "123 rue des archives",
                  "address_supplement" : "Porte gauche",
                  "zip" : "A1234",
                  "city" : "Paris",
                  "country_code" : "FR",
                  "vat_number" : "FR123456789"
                },
                "subject" : "Design of the homepage",
                "lines" : [ {
                  "sku" : "AX123",
                  "description" : "Mockup and copywriting",
                  "title" : "Homepage design",
                  "type" : 0,
                  "price" : 120.32,
                  "quantity" : 1,
                  "unit" : "piece",
                  "discount_amount" : 10,
                  "discount_type" : "percentage",
                  "vat" : 20,
                  "origin_country" : "FR",
                  "second_hand_good" : false
                }, {
                  "sku" : "AX456",
                  "description" : "Logo with 3 colors",
                  "title" : "Logo design",
                  "type" : 0,
                  "price" : 59,
                  "quantity" : 1,
                  "unit" : "piece",
                  "discount_amount" : 0,
                  "discount_type" : "percentage",
                  "vat" : 20,
                  "origin_country" : "FR",
                  "second_hand_good" : false
                } ],
                "lines_groups" : [ {
                  "name" : "Design",
                  "articles" : [ 0, 1 ]
                } ],
                "comments" : "Payment to be done within 3 days",
                "payment_instructions_included" : true,
                "payment_conditions_included" : true,
                "language" : "fr",
                "vat_exemption_text" : "Article 138 CE/2008",
                "execution_date" : 1566493220992
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Created invoice",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Invoice"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 500,
                  "message" : "Internal server error"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 403,
                  "message" : "Unauthorized"
                }
              }
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 404,
                  "message" : "Resource not found"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}/download" : {
      "get" : {
        "tags" : [ "Invoice" ],
        "summary" : "Download invoice PDF by ID",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Invoice ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return the PDF file",
            "content" : {
              "application/pdf" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                },
                "examples" : {
                  "sampleFile" : {
                    "summary" : "A sample file",
                    "externalValue" : "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 500,
                  "message" : "Internal server error"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 403,
                  "message" : "Unauthorized"
                }
              }
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 404,
                  "message" : "Resource not found"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}" : {
      "get" : {
        "tags" : [ "Invoice" ],
        "summary" : "Find invoice by ID",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Invoice ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return a single invoice",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Invoice"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 500,
                  "message" : "Internal server error"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 403,
                  "message" : "Unauthorized"
                }
              }
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 404,
                  "message" : "Resource not found"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Invoice" ],
        "summary" : "Update a complete invoice",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Invoice ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Invoice"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Updated invoice",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Invoice"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 500,
                  "message" : "Internal server error"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 403,
                  "message" : "Unauthorized"
                }
              }
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 404,
                  "message" : "Resource not found"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Invoice" ],
        "summary" : "Delete invoice by ID",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Invoice ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "The invoice was deleted successfully"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 500,
                  "message" : "Internal server error"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 403,
                  "message" : "Unauthorized"
                }
              }
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 404,
                  "message" : "Resource not found"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Invoice" ],
        "summary" : "Update an invoice partially",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Invoice ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/JSONPatchRequestAddReplaceTest"
                  }, {
                    "$ref" : "#/components/schemas/JSONPatchRequestRemove"
                  }, {
                    "$ref" : "#/components/schemas/JSONPatchRequestMoveCopy"
                  } ]
                }
              },
              "examples" : {
                "AddReplaceTest" : {
                  "value" : [ {
                    "op" : "replace",
                    "path" : "/lines/0/type",
                    "value" : 1
                  } ]
                },
                "Remove" : {
                  "value" : [ {
                    "op" : "remove",
                    "path" : "/subject"
                  } ]
                },
                "MoveCopy" : {
                  "value" : [ {
                    "op" : "copy",
                    "from" : "/lines/0/sku",
                    "path" : "/lines/1/sku"
                  } ]
                }
              }
            },
            "application/merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Invoice"
              },
              "example" : {
                "payment_term" : 3,
                "template" : "london"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Updated invoice",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Invoice"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 500,
                  "message" : "Internal server error"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 403,
                  "message" : "Unauthorized"
                }
              }
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 404,
                  "message" : "Resource not found"
                }
              }
            }
          }
        }
      }
    },
    "/countries" : {
      "get" : {
        "tags" : [ "Miscellaneous" ],
        "summary" : "Retrieve all countries",
        "responses" : {
          "200" : {
            "description" : "Return the list of countries",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_1"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 500,
                  "message" : "Internal server error"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 403,
                  "message" : "Unauthorized"
                }
              }
            }
          }
        }
      }
    },
    "/articles" : {
      "get" : {
        "tags" : [ "Article" ],
        "summary" : "Retrieve all invoices",
        "parameters" : [ {
          "name" : "keyword",
          "in" : "query",
          "description" : "Keyword to search for",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return the list of articles",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_2"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 500,
                  "message" : "Internal server error"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 403,
                  "message" : "Unauthorized"
                }
              }
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 404,
                  "message" : "Resource not found"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Article" ],
        "summary" : "Create a new article",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/articles_body"
              },
              "example" : {
                "manufacturer" : "Apple",
                "origin_country" : "FR",
                "price" : 10.32,
                "purchase_price" : 8.32,
                "sku" : "AZ123",
                "title" : "Shirt",
                "description" : "Size M",
                "vat" : 20,
                "type" : 0,
                "vat_included" : true,
                "second_hand_good" : false
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Created invoice",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Invoice"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 500,
                  "message" : "Internal server error"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 403,
                  "message" : "Unauthorized"
                }
              }
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 404,
                  "message" : "Resource not found"
                }
              }
            }
          }
        }
      }
    },
    "/articles/{id}" : {
      "get" : {
        "tags" : [ "Article" ],
        "summary" : "Find article by ID",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Article ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return a single article",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Article"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 500,
                  "message" : "Internal server error"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 403,
                  "message" : "Unauthorized"
                }
              }
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 404,
                  "message" : "Resource not found"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Article" ],
        "summary" : "Update a complete article",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Article ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Article"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Updated article",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Invoice"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 500,
                  "message" : "Internal server error"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 403,
                  "message" : "Unauthorized"
                }
              }
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 404,
                  "message" : "Resource not found"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Article" ],
        "summary" : "Delete article by ID",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Article ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "The article was deleted successfully"
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 500,
                  "message" : "Internal server error"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 403,
                  "message" : "Unauthorized"
                }
              }
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 404,
                  "message" : "Resource not found"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Article" ],
        "summary" : "Update an article partially",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Article ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/JSONPatchRequestAddReplaceTest"
                  }, {
                    "$ref" : "#/components/schemas/JSONPatchRequestRemove"
                  }, {
                    "$ref" : "#/components/schemas/JSONPatchRequestMoveCopy"
                  } ]
                }
              },
              "examples" : {
                "AddReplaceTest" : {
                  "value" : [ {
                    "op" : "replace",
                    "path" : "/lines/0/type",
                    "value" : 1
                  } ]
                },
                "Remove" : {
                  "value" : [ {
                    "op" : "remove",
                    "path" : "/subject"
                  } ]
                },
                "MoveCopy" : {
                  "value" : [ {
                    "op" : "copy",
                    "from" : "/lines/0/sku",
                    "path" : "/lines/1/sku"
                  } ]
                }
              }
            },
            "application/merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Article"
              },
              "example" : {
                "payment_term" : 3,
                "template" : "london"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Updated article",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Article"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 500,
                  "message" : "Internal server error"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 403,
                  "message" : "Unauthorized"
                }
              }
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "example" : {
                  "code" : 404,
                  "message" : "Resource not found"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Error" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "The error message indicating what the issue is"
          },
          "code" : {
            "type" : "integer",
            "description" : "The http status code"
          }
        }
      },
      "JSONPatchRequestAddReplaceTest" : {
        "required" : [ "op", "path", "value" ],
        "type" : "object",
        "properties" : {
          "path" : {
            "type" : "string",
            "description" : "A JSON Pointer path."
          },
          "value" : {
            "description" : "The value to add, replace or test."
          }
        },
        "additionalProperties" : false
      },
      "JSONPatchRequestRemove" : {
        "required" : [ "op", "path" ],
        "type" : "object",
        "properties" : {
          "path" : {
            "type" : "string",
            "description" : "A JSON Pointer path."
          },
          "op" : {
            "type" : "string",
            "description" : "The operation to perform.",
            "enum" : [ "remove" ]
          }
        },
        "additionalProperties" : false
      },
      "JSONPatchRequestMoveCopy" : {
        "required" : [ "from", "op", "path" ],
        "type" : "object",
        "properties" : {
          "path" : {
            "type" : "string",
            "description" : "A JSON Pointer path."
          },
          "op" : {
            "type" : "string",
            "description" : "The operation to perform.",
            "enum" : [ "move", "copy" ]
          }
        },
        "additionalProperties" : false
      },
      "Article" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "5d5env258126ab647499f9bf"
          },
          "manufacturer" : {
            "type" : "string",
            "example" : "Apple"
          },
          "origin_country" : {
            "type" : "string",
            "example" : "FR"
          },
          "price" : {
            "type" : "number",
            "example" : 10.32
          },
          "purchase_price" : {
            "type" : "number",
            "example" : 10.32
          },
          "sku" : {
            "type" : "string",
            "example" : "AZ123"
          },
          "title" : {
            "type" : "string",
            "example" : "Shirt"
          },
          "description" : {
            "type" : "string",
            "example" : "Size M"
          },
          "vat" : {
            "type" : "number",
            "example" : 20
          },
          "type" : {
            "type" : "number",
            "example" : 0
          },
          "vat_included" : {
            "type" : "boolean"
          },
          "second_hand_good" : {
            "type" : "boolean"
          }
        }
      },
      "Country" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "example" : "FR"
          },
          "eu_member" : {
            "type" : "boolean"
          },
          "label" : {
            "$ref" : "#/components/schemas/Country_label"
          }
        }
      },
      "Invoice" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "5d5eca258126ab647499f9bf"
          },
          "currency" : {
            "type" : "string",
            "example" : "EUR"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "draft", "not_paid", "paid", "cancelled" ]
          },
          "payment_term" : {
            "type" : "integer",
            "example" : 1
          },
          "discount_amount" : {
            "type" : "number",
            "example" : 12.2
          },
          "discount_type" : {
            "type" : "string",
            "enum" : [ "percentage", "fixed" ]
          },
          "rebate" : {
            "type" : "number",
            "example" : 10
          },
          "activity" : {
            "type" : "string",
            "example" : "5d5efds258126ab647499f9bf"
          },
          "template" : {
            "type" : "string",
            "enum" : [ "basic", "london", "paris", "berlin" ]
          },
          "shipping_amount" : {
            "type" : "number",
            "example" : 4.5
          },
          "shipping_vat" : {
            "type" : "number",
            "example" : 20
          },
          "vat_liable" : {
            "type" : "boolean"
          },
          "vat_included" : {
            "type" : "boolean"
          },
          "client" : {
            "$ref" : "#/components/schemas/invoices_client"
          },
          "billing_address" : {
            "$ref" : "#/components/schemas/Invoice_billing_address"
          },
          "subject" : {
            "type" : "string",
            "example" : "Design of the homepage"
          },
          "lines" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Invoice_lines"
            }
          },
          "lines_groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/invoices_lines_groups"
            }
          },
          "comments" : {
            "type" : "string",
            "example" : "Payment to be done within 3 days"
          },
          "payment_instructions_included" : {
            "type" : "boolean"
          },
          "payment_conditions_included" : {
            "type" : "boolean"
          },
          "language" : {
            "type" : "string",
            "enum" : [ "fr", "en", "de", "es", "it" ]
          },
          "vat_exemption_text" : {
            "type" : "string",
            "example" : "Article 138 CE/2008"
          },
          "execution_date" : {
            "type" : "integer",
            "example" : 1566493220992
          },
          "paid_date" : {
            "type" : "integer",
            "example" : 1566493220992
          },
          "paid_method" : {
            "type" : "integer",
            "example" : 1
          }
        }
      },
      "inline_response_200" : {
        "type" : "object",
        "properties" : {
          "summary" : {
            "$ref" : "#/components/schemas/inline_response_200_summary"
          },
          "invoices" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Invoice"
            }
          }
        }
      },
      "invoices_client" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string",
            "example" : "5d5eca258126ab647499f9bf"
          },
          "identifier" : {
            "type" : "string",
            "example" : "John Doe"
          }
        }
      },
      "invoices_billing_address" : {
        "type" : "object",
        "properties" : {
          "last_name" : {
            "type" : "string",
            "example" : "Doe"
          },
          "first_name" : {
            "type" : "string",
            "example" : "John"
          },
          "company_name" : {
            "type" : "string",
            "example" : "John's company"
          },
          "address" : {
            "type" : "string",
            "example" : "123 rue des archives"
          },
          "address_supplement" : {
            "type" : "string",
            "example" : "Porte gauche"
          },
          "zip" : {
            "type" : "string",
            "example" : "A1234"
          },
          "city" : {
            "type" : "string",
            "example" : "Paris"
          },
          "country_code" : {
            "type" : "string",
            "example" : "FR"
          },
          "vat_number" : {
            "type" : "string",
            "example" : "FR12345678934"
          }
        }
      },
      "invoices_lines" : {
        "type" : "object",
        "properties" : {
          "sku" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "type" : {
            "type" : "integer"
          },
          "price" : {
            "type" : "number"
          },
          "quantity" : {
            "type" : "number"
          },
          "unit" : {
            "type" : "string",
            "enum" : [ "piece", "hour", "day", "meter", "kilometer", "kilogram", "square_meter" ]
          },
          "discount_amount" : {
            "type" : "number"
          },
          "discount_type" : {
            "type" : "string",
            "enum" : [ "percentage", "fixed" ]
          },
          "vat" : {
            "type" : "number"
          },
          "origin_country" : {
            "type" : "string"
          },
          "second_hand_good" : {
            "type" : "boolean"
          }
        }
      },
      "invoices_lines_groups" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Design and mockup"
          },
          "articles" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "example" : 0
            }
          }
        }
      },
      "invoices_body" : {
        "type" : "object",
        "properties" : {
          "currency" : {
            "type" : "string",
            "example" : "EUR"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "draft", "not_paid", "paid", "cancelled" ]
          },
          "payment_term" : {
            "type" : "integer",
            "example" : 1
          },
          "discount_amount" : {
            "type" : "number",
            "example" : 10
          },
          "discount_type" : {
            "type" : "string",
            "enum" : [ "percentage", "fixed" ]
          },
          "rebate" : {
            "type" : "number",
            "example" : 0
          },
          "activity" : {
            "type" : "string",
            "example" : "5d5efds258126ab647499f9bf"
          },
          "template" : {
            "type" : "string",
            "enum" : [ "basic", "london", "paris", "berlin" ]
          },
          "shipping_amount" : {
            "type" : "number",
            "example" : 12.45
          },
          "shipping_vat" : {
            "type" : "number",
            "example" : 20
          },
          "vat_liable" : {
            "type" : "boolean"
          },
          "vat_included" : {
            "type" : "boolean"
          },
          "client" : {
            "$ref" : "#/components/schemas/invoices_client"
          },
          "billing_address" : {
            "$ref" : "#/components/schemas/invoices_billing_address"
          },
          "subject" : {
            "type" : "string",
            "example" : "Design of the homepage"
          },
          "lines" : {
            "type" : "array",
            "example" : [ {
              "sku" : "AX123",
              "description" : "Mockup and copywriting",
              "title" : "Homepage design",
              "type" : 0,
              "price" : 120.32,
              "quantity" : 1,
              "unit" : "piece",
              "discount_amount" : 10,
              "discount_type" : "percentage",
              "vat" : 20,
              "origin_country" : "FR",
              "second_hand_good" : false
            }, {
              "sku" : "AX456",
              "description" : "Logo with 3 colors",
              "title" : "Logo design",
              "type" : 0,
              "price" : 59,
              "quantity" : 1,
              "unit" : "piece",
              "discount_amount" : 0,
              "discount_type" : "percentage",
              "vat" : 20,
              "origin_country" : "FR",
              "second_hand_good" : false
            } ],
            "items" : {
              "$ref" : "#/components/schemas/invoices_lines"
            }
          },
          "lines_groups" : {
            "type" : "array",
            "example" : [ {
              "name" : "Design",
              "articles" : [ 0, 1 ]
            } ],
            "items" : {
              "$ref" : "#/components/schemas/invoices_lines_groups"
            }
          },
          "comments" : {
            "type" : "string",
            "example" : "Payment to be done within 3 days"
          },
          "payment_instructions_included" : {
            "type" : "boolean"
          },
          "payment_conditions_included" : {
            "type" : "boolean"
          },
          "language" : {
            "type" : "string",
            "enum" : [ "fr", "en", "de", "es", "it" ]
          },
          "vat_exemption_text" : {
            "type" : "string",
            "example" : "Article 138 CE/2008"
          },
          "execution_date" : {
            "type" : "integer",
            "example" : 1566493220992
          },
          "paid_date" : {
            "type" : "integer",
            "example" : 1566493220992
          },
          "paid_method" : {
            "type" : "integer",
            "example" : 1
          }
        }
      },
      "inline_response_200_1" : {
        "type" : "object",
        "properties" : {
          "countries" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Country"
            }
          }
        }
      },
      "inline_response_200_2" : {
        "type" : "object",
        "properties" : {
          "articles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Article"
            }
          }
        }
      },
      "articles_body" : {
        "type" : "object",
        "properties" : {
          "manufacturer" : {
            "type" : "string"
          },
          "origin_country" : {
            "type" : "string"
          },
          "price" : {
            "type" : "number"
          },
          "purchase_price" : {
            "type" : "number"
          },
          "sku" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "vat" : {
            "type" : "number"
          },
          "type" : {
            "type" : "number"
          },
          "vat_included" : {
            "type" : "boolean"
          },
          "second_hand_good" : {
            "type" : "boolean"
          }
        }
      },
      "Country_label" : {
        "type" : "object",
        "properties" : {
          "fr" : {
            "type" : "string",
            "example" : "France"
          },
          "en" : {
            "type" : "string",
            "example" : "France"
          }
        }
      },
      "Invoice_billing_address" : {
        "type" : "object",
        "properties" : {
          "last_name" : {
            "type" : "string",
            "example" : "Doe"
          },
          "first_name" : {
            "type" : "string",
            "example" : "John"
          },
          "company_name" : {
            "type" : "string",
            "example" : "John's company"
          },
          "address" : {
            "type" : "string",
            "example" : "123 rue des archives"
          },
          "address_supplement" : {
            "type" : "string",
            "example" : "Porte gauche"
          },
          "zip" : {
            "type" : "string",
            "example" : "A1234"
          },
          "city" : {
            "type" : "string",
            "example" : "Paris"
          },
          "country_code" : {
            "type" : "string",
            "example" : "FR"
          },
          "vat_number" : {
            "type" : "string",
            "example" : "FR123456789"
          }
        }
      },
      "Invoice_lines" : {
        "type" : "object",
        "properties" : {
          "sku" : {
            "type" : "string",
            "example" : "AX123"
          },
          "description" : {
            "type" : "string",
            "example" : "Mockup and copywriting"
          },
          "title" : {
            "type" : "string",
            "example" : "Homepage design"
          },
          "type" : {
            "type" : "integer",
            "example" : 0
          },
          "price" : {
            "type" : "number",
            "example" : 120.32
          },
          "quantity" : {
            "type" : "number",
            "example" : 1
          },
          "unit" : {
            "type" : "string",
            "enum" : [ "piece", "hour", "day", "meter", "kilometer", "kilogram", "square_meter" ]
          },
          "discount_amount" : {
            "type" : "number",
            "example" : 10
          },
          "discount_type" : {
            "type" : "string",
            "enum" : [ "percentage", "fixed" ]
          },
          "vat" : {
            "type" : "number",
            "example" : 20
          },
          "origin_country" : {
            "type" : "string",
            "example" : "FR"
          },
          "second_hand_good" : {
            "type" : "boolean"
          }
        }
      },
      "inline_response_200_summary_total" : {
        "type" : "object",
        "properties" : {
          "size" : {
            "type" : "integer",
            "example" : 123
          },
          "amount" : {
            "type" : "number",
            "example" : 1203.54
          }
        }
      },
      "inline_response_200_summary_paid" : {
        "type" : "object",
        "properties" : {
          "size" : {
            "type" : "integer",
            "example" : 110
          },
          "amount" : {
            "type" : "number",
            "example" : 1052.23
          }
        }
      },
      "inline_response_200_summary_unpaid" : {
        "type" : "object",
        "properties" : {
          "size" : {
            "type" : "integer",
            "example" : 2
          },
          "amount" : {
            "type" : "number",
            "example" : 100
          }
        }
      },
      "inline_response_200_summary_overdue" : {
        "type" : "object",
        "properties" : {
          "size" : {
            "type" : "integer",
            "example" : 6
          },
          "amount" : {
            "type" : "number",
            "example" : 32.3
          }
        }
      },
      "inline_response_200_summary_draft" : {
        "type" : "object",
        "properties" : {
          "size" : {
            "type" : "integer",
            "example" : 5
          },
          "amount" : {
            "type" : "number",
            "example" : 19.01
          }
        }
      },
      "inline_response_200_summary" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "$ref" : "#/components/schemas/inline_response_200_summary_total"
          },
          "paid" : {
            "$ref" : "#/components/schemas/inline_response_200_summary_paid"
          },
          "unpaid" : {
            "$ref" : "#/components/schemas/inline_response_200_summary_unpaid"
          },
          "overdue" : {
            "$ref" : "#/components/schemas/inline_response_200_summary_overdue"
          },
          "draft" : {
            "$ref" : "#/components/schemas/inline_response_200_summary_draft"
          }
        }
      }
    },
    "responses" : {
      "NotFound" : {
        "description" : "The specified resource was not found",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            },
            "example" : {
              "code" : 404,
              "message" : "Resource not found"
            }
          }
        }
      },
      "Unauthorized" : {
        "description" : "Unauthorized",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            },
            "example" : {
              "code" : 403,
              "message" : "Unauthorized"
            }
          }
        }
      },
      "InternalServerError" : {
        "description" : "Internal Server Error",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            },
            "example" : {
              "code" : 500,
              "message" : "Internal server error"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "ApiKey" : {
        "type" : "apiKey",
        "name" : "X-Api-Key",
        "in" : "header"
      },
      "JWTAuth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  }
}